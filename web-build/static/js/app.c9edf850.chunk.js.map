{"version":3,"sources":["constants/Percolate.js","components/Task.js","components/LoadingRow.js","components/PureTasList.js","components/TaskList.js","lib/redux.js","components/PureInboxScreen.js","constants/globalStyles.js","components/PureTaskList.stories.js","storybook/index.js","screens/NotFoundScreen.tsx","components/TabBarIcon.js","screens/InboxScreen.js","screens/HomeScreen.js","screens/LinksScreen.js","navigation/BottomTabNavigator.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","hooks/useColorScheme.ts","assets/fonts/SpaceMono-Regular.ttf","assets/icon/percolate.ttf","assets/fonts/NunitoSans-Bold.ttf","assets/fonts/NunitoSans-Italic.ttf","assets/fonts/NunitoSans-Regular.ttf","components/Task.stories.js","storybook/rn-addons.js","components/PureInboxScreen.stories.js"],"names":["iconSet","createIconSet","graphql","redux","grid","redirect","grow","lightning","transfer","calendar","sidebar","tablet","atmosphere","browser","database","mobile","watch","home","user","users","profile","bookmark","star","circle","heart","lock","unlock","key","sync","reply","expand","back","download","upload","proceed","info","question","alert","edit","paintbrush","close","trash","cross","delete","power","add","plus","document","category","copy","book","certificate","print","menu","filter","ellipsis","cog","wrench","nut","camera","eye","photo","video","speaker","phone","flag","pin","compass","globe","location","search","timer","time","dashboard","hourglass","play","stop","email","comment","link","paperclip","box","structure","commit","cpu","memory","outbox","share","button","check","form","admin","paragraph","bell","rss","basket","credit","support","shield","beaker","google","gdrive","youtube","facebook","twitter","github","meteor","Button","TabBarItem","TabBarItemIOS","ToolbarAndroid","getImageSource","Task","task","id","title","state","onArchiveTask","onPinTask","style","styles","ListItem","onPress","CheckBox","name","size","color","placeholder","ListItemInputTaskArchived","ListItemInputTask","value","editable","PropTypes","shape","string","isRequired","func","LoadingRow","SaveArea","padding","GlowView","LoadingItem","GlowCheckbox","Text","GlowText","PureTaskList","loading","tasks","events","SaveAreaView","ListItems","length","View","WrapperMessage","Percolate","TitleMessage","SubtitleMessage","t","tstate","FlatList","data","keyExtractor","renderItem","item","boolean","arrayOf","isRrequired","defaultProps","connect","dispatch","archiveTask","pinTask","actions","type","taskStateReducer","taskState","action","map","is","createStore","PureInboxScreen","error","PageListsShow","titlepage","PageListsShowhead","numberOfLines","TitleWrapper","StyleSheet","create","container","flex","backgroundColor","width","TaskBox","fontSize","borderColor","borderStyle","borderWidth","borderRadius","height","flexDirection","flexWrap","alignItems","justifyContent","fontFamily","lineHeight","fontStyle","paddingLeft","minHeight","position","top","right","bottom","left","textAlign","paddingTop","paddingBottom","paddingRight","fontWeight","maxWidth","defaultTasks","withPinnedTask","slice","storiesOf","module","addDecorator","story","withKnobs","configure","require","StorybookUIRoot","getStorybookUI","asyncStorage","AppRegistry","registerComponent","NotFoundScreen","navigation","TouchableOpacity","replace","linkText","marginTop","paddingVertical","TabBarIcon","HomeScreen","store","LinksScreen","BottomTab","createBottomTabNavigator","BottomTabNavigator","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","tabBarIcon","focused","routes","index","prefixes","Linking","config","screens","Root","TabOne","TabOneScreen","TabTwo","TabTwoScreen","NotFound","Navigation","colorScheme","NavigationContainer","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createStackNavigator","screenOptions","headerShown","App","isLoadingComplete","React","setLoadingComplete","a","async","SplashScreen","Font","Ionicons","font","percolate","NunitoSans","console","warn","useCachedResources","_useColorScheme","StatusBar","exports","updatedAt","Date","getState","subscribe"],"mappings":"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","file":"static/js/app.c9edf850.chunk.js","sourcesContent":["// constants/Percolate.js\r\n/**\r\n * PercolateIcons icon set component.\r\n * Usage: <PercolateIcons name=\"icon-name\" size={20} color=\"#4F8EF7\" />\r\n */\r\n\r\nimport { createIconSet } from '@expo/vector-icons';\r\nconst glyphMap = {\r\n    graphql: 59658,\r\n    redux: 59656,\r\n    grid: 59657,\r\n    redirect: 59655,\r\n    grow: 59651,\r\n    lightning: 59652,\r\n    'request-change': 59653,\r\n    transfer: 59654,\r\n    calendar: 59650,\r\n    sidebar: 59648,\r\n    tablet: 59649,\r\n    atmosphere: 58993,\r\n    browser: 58994,\r\n    database: 58995,\r\n    'expand-alt': 58996,\r\n    mobile: 58997,\r\n    watch: 58998,\r\n    home: 58880,\r\n    'user-alt': 58881,\r\n    user: 58882,\r\n    'user-add': 58883,\r\n    users: 58884,\r\n    profile: 58885,\r\n    bookmark: 58886,\r\n    'bookmark-hollow': 58887,\r\n    star: 58888,\r\n    'star-hollow': 58889,\r\n    circle: 58890,\r\n    'circle-hollow': 58891,\r\n    heart: 58892,\r\n    'heart-hollow': 58893,\r\n    'face-happy': 58894,\r\n    'face-sad': 58895,\r\n    'face-neutral': 58896,\r\n    lock: 58897,\r\n    unlock: 58898,\r\n    key: 58899,\r\n    'arrow-left-alt': 58900,\r\n    'arrow-right-alt': 58901,\r\n    sync: 58902,\r\n    reply: 58903,\r\n    expand: 58904,\r\n    'arrow-left': 58905,\r\n    'arrow-up': 58906,\r\n    'arrow-down': 58907,\r\n    'arrow-right': 58908,\r\n    'chevron-down': 58909,\r\n    back: 58910,\r\n    download: 58911,\r\n    upload: 58912,\r\n    proceed: 58913,\r\n    info: 58914,\r\n    question: 58915,\r\n    alert: 58916,\r\n    edit: 58917,\r\n    paintbrush: 58918,\r\n    close: 58919,\r\n    trash: 58920,\r\n    cross: 58921,\r\n    delete: 58922,\r\n    power: 58923,\r\n    add: 58924,\r\n    plus: 58925,\r\n    document: 58926,\r\n    'graph-line': 58927,\r\n    'doc-chart': 58928,\r\n    'doc-list': 58929,\r\n    category: 58930,\r\n    copy: 58931,\r\n    book: 58932,\r\n    certificate: 58934,\r\n    print: 58935,\r\n    'list-unordered': 58936,\r\n    'graph-bar': 58937,\r\n    menu: 58938,\r\n    filter: 58939,\r\n    ellipsis: 58940,\r\n    cog: 58941,\r\n    wrench: 58942,\r\n    nut: 58943,\r\n    camera: 58944,\r\n    eye: 58945,\r\n    photo: 58946,\r\n    video: 58947,\r\n    speaker: 58948,\r\n    phone: 58949,\r\n    flag: 58950,\r\n    pin: 58951,\r\n    compass: 58952,\r\n    globe: 58953,\r\n    location: 58954,\r\n    search: 58955,\r\n    timer: 58956,\r\n    time: 58957,\r\n    dashboard: 58958,\r\n    hourglass: 58959,\r\n    play: 58960,\r\n    stop: 58961,\r\n    email: 58962,\r\n    comment: 58963,\r\n    link: 58964,\r\n    paperclip: 58965,\r\n    box: 58966,\r\n    structure: 58967,\r\n    commit: 58968,\r\n    cpu: 58969,\r\n    memory: 58970,\r\n    outbox: 58971,\r\n    share: 58972,\r\n    button: 58973,\r\n    check: 58974,\r\n    form: 58975,\r\n    admin: 58976,\r\n    paragraph: 58977,\r\n    bell: 58978,\r\n    rss: 58979,\r\n    basket: 58980,\r\n    credit: 58981,\r\n    support: 58982,\r\n    shield: 58983,\r\n    beaker: 58984,\r\n    google: 58985,\r\n    gdrive: 58986,\r\n    youtube: 58987,\r\n    facebook: 58988,\r\n    'thumbs-up': 58989,\r\n    twitter: 58990,\r\n    github: 58991,\r\n    meteor: 58992,\r\n};\r\n\r\nconst iconSet = createIconSet(glyphMap, 'percolate');\r\n\r\nexport default iconSet;\r\n\r\nexport const Button = iconSet.Button;\r\nexport const TabBarItem = iconSet.TabBarItem;\r\nexport const TabBarItemIOS = iconSet.TabBarItemIOS;\r\nexport const ToolbarAndroid = iconSet.ToolbarAndroid;\r\nexport const getImageSource = iconSet.getImageSource;","import * as React from 'react';\r\nimport { TextInput, SafeAreaView, View, TouchableOpacity, Text } from 'react-native';\r\nimport { styles } from '../constants/globalStyles';\r\nimport { PercolateIcons } from '../constants/Percolate';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Task({task: {id, title, state}, onArchiveTask, onPinTask}) {\r\n    return (\r\n        <SafeAreaView style={styles.ListItem}>\r\n            <TouchableOpacity onPress={() => onArchiveTask(id)}>\r\n                {state != 'TASK_ARCHIVED' ? (\r\n                    <View style={styles.CheckBox} />\r\n                ) : (\r\n                    <PercolateIcons name=\"check\" size={20} color={'#2cc5d2'} />\r\n                )}\r\n            </TouchableOpacity>\r\n\r\n            <TextInput \r\n                placeholder=\"Input title\"\r\n                style={\r\n                    state === 'TASK_ARCHIVE' ? styles.ListItemInputTaskArchived : styles.ListItemInputTask\r\n                }\r\n                value={title}\r\n                editable={false} \r\n            />\r\n\r\n            <TouchableOpacity onPress={() => onPinTask(id)}>\r\n                <PercolateIcons \r\n                    name=\"star\"\r\n                    size={20}\r\n                    color={state !=='TASK_PINNED' ? '#eee' : '#26c6da'}\r\n                />\r\n            </TouchableOpacity>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\nTask.PropTypes = {\r\n    task: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        state: PropTypes.string.isRequired\r\n    }),\r\n    onArchiveTask: PropTypes.func,\r\n    onPinTask: PropTypes.func\r\n};","// components/LoadingRow.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Animated, Text, View, Easing, SafeAreaView } from 'react-native';\r\nimport { styles } from '../constants/globalStyles';\r\n\r\nconst Glow = props => {\r\n    const [glowAnim] = useState(new Animated.Value(0));\r\n\r\n    useEffect(() => {\r\n        Animated.loop(\r\n            Animated.timing(glowingAnim, {\r\n                toValue: 1,\r\n                duration: 1500,\r\n                easing: Easing.inOut(Easing.quad),\r\n            })\r\n        ).start();\r\n    }, []);\r\n\r\n    return (\r\n        <Animated.View\r\n            style={{\r\n                ...props.style,\r\n                opacity: glowAnim,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </Animated.View>\r\n    )\r\n}\r\n\r\nconst LoadingRow = () => (\r\n    <SaveArea style={{padding: 12}}>\r\n        <GlowView>\r\n            <View style={styles.LoadingItem}>\r\n                <View style={styles.GlowCheckbox} />\r\n                <Text style={styles.GlowText}>Loading</Text>\r\n                <Text style={styles.GlowText}>cool</Text>\r\n                <Text style={styles.GlowText}>state</Text>\r\n            </View>\r\n        </GlowView>\r\n    </SaveArea>\r\n);\r\n\r\nexport default LoadingRow;","// components/TaskList.js\r\nimport * as React from 'react';\r\nimport Task from './Task';\r\nimport PercolateIcons from '../constants/Percolate';\r\nimport LoadingRow from './LoadingRow';\r\nimport { FlatList, Text, SafeAreaView } from 'react-native';\r\nimport { styles } from '../constants/globalStyles';\r\nimport { task } from './Task.stories';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nfunction PureTaskList({loading, tasks, onPinTask, onArchiveTask}) {\r\n    const events = {\r\n        onPinTask,\r\n        onArchiveTask,\r\n    };\r\n    if(loading) {\r\n        return (\r\n            <SaveAreaView style={styles.ListItems}>\r\n                {/* <Text>loading</Text> */}\r\n                <LoadingRow />\r\n                <LoadingRow />\r\n                <LoadingRow />\r\n                <LoadingRow />\r\n                <LoadingRow />\r\n                <LoadingRow />\r\n            </SaveAreaView>\r\n        );\r\n    }\r\n    if(task.length === 0) {\r\n        return (\r\n            <SaveAreaView style={styles.ListItems}>\r\n            {/* <Text>empty</Text> */}\r\n            <View style={styles.WrapperMessage}>\r\n                <PercolateIcons name=\"check\" size={64} color={'#2cc5d2'} />\r\n                <Text style={styles.TitleMessage}>You have no tasks</Text>\r\n                <Text style={styles.SubtitleMessage}>Sit back and relax</Text>\r\n            </View>\r\n        </SaveAreaView>\r\n        );\r\n    }\r\n    const taskInOrder = [\r\n        ...tasks.filter(t => t.state === 'TASK_PINNED'),\r\n        ...tasks.filter(t => tstate !== 'TASK_PINNED'),\r\n    ];\r\n    return (\r\n        <SaveAreaView style={styles.ListItems}>\r\n            <FlatList \r\n                data={tasks}\r\n                keyExtractor={task => task.id}\r\n                renderItem={({item}) => <Task key={item.id} {...events} />}\r\n            />\r\n        </SaveAreaView>\r\n    )\r\n}\r\n\r\nPureTaskList.PropTypes = {\r\n    loading: PropTypes.boolean,\r\n    tasks: PropTypes.arrayOf(Task.PropTypes.task).isRequired,\r\n    onPinTask: PropTypes.func.isRequired,\r\n    onArchiveTask: PropTypes.func.isRrequired\r\n};\r\n\r\nPureTaskList.defaultProps = {\r\n    loading: false\r\n}\r\n\r\nexport default PureTaskList;","// components/TaskList.js\r\nimport * as React from 'react';\r\nimport { PureTaskList } from './PureTasList';\r\nimport { connect } from 'react-redux';\r\nimport { archiveTask, pinTask } from '../lib/redux';\r\n\r\nfunction TaskList({ tasks, onPinTask, onArchiveTask }) {\r\n    const events = {\r\n        onPinTask,\r\n        onArchiveTask,\r\n    };\r\n    return <PureTaskList tasks={tasks} {...events} />\r\n}\r\n\r\nexport default connect(\r\n    ({tasks}) => ({\r\n        tasks: tasks.filter(t => t.state === 'TASK_INBOX' || t.state === 'TASK.PINNED',)\r\n    }),\r\n    dispatch => ({\r\n        onArchiveTask: id => dispatch(archiveTask(id)),\r\n        onPinTask: id => dispatch(pinTask(id))\r\n    })\r\n)(TaskList);\r\n// export default TaskList;","// lib/redux.js\r\n\r\n// A simple redux store/actions/reducer implementation.\r\n// A true app would be more complex and separated into different files.\r\nimport { createStore } from 'redux';\r\n\r\n// The actions are the \"names\" of the changes that can happent to the store\r\nexport const actions = {\r\n    ARCHIVE_TASK: 'ARCHIVE_TASK',\r\n    PIN_TASK: 'PIN_TASK'\r\n};\r\n\r\n// The action creators bundle actions with the data required to execute them\r\nexport const archiveTask = id => ({ type: actions.ARCHIVE_TASK, id });\r\nexport const pinTask = id => ({ type: actions.PIN_TASK, id });\r\n\r\n// All our reducers simply change the state of a single task\r\nfunction taskStateReducer(taskState) {\r\n    return (state, action) => {\r\n        return {\r\n            ...state,\r\n            tasks: state.map(task =>\r\n                task.is === action.id ? { ...task, state: taskState } : task\r\n            ),\r\n        };\r\n    };\r\n}\r\n\r\n// The reducer describes how the contents of the store change for each action\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case actions.ARCHIVE_TASK:\r\n            return taskStateReducer('TASK_ARCHIVED')(state, action);\r\n        case actions.PIN_TASK:\r\n            return taskStateReducer('TASK_PINNED')(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// The initial state of our store when the app loads\r\n// Usually you would fetch this from a server\r\nconst defaultTasks = [\r\n    { id: '1', title: 'Something', state: 'TASK_INBOX' },\r\n    { id: '2', title: 'Something more', state: 'TASK_INBOX' },\r\n    { id: '3', title: 'Something else', state: 'TASK_INBOX' },\r\n    { id: '4', title: 'Something again', state: 'TASK_INBOX' },\r\n];\r\n\r\n// We export the constructed redux store\r\nexport default createStore(reducer, { tasks: defaultTasks })","// components/PureInboxScreen.js\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PercolateIcons from '../constants/Percolate';\r\nimport TaskList from './TaskList';\r\nimport { Text, SafeAreaView, View } from 'react-native';\r\nimport { styles } from '../constants/globalStyles';\r\n\r\nconst PureInboxScreen = ({ error }) => {\r\n    if(error) {\r\n        return (\r\n            <SafeAreaView style={styles.PageListsShow}>\r\n                <View style={styles.WrapperMessage}>\r\n                    <PercolateIcons name=\"face-sad\" size={64} color={'#2cc5d2'} />\r\n                    <Text >Oh no!</Text>\r\n                </View>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.PageListsShow}>\r\n            <View style={[styles.titlepage, styles.PageListsShowhead]}>\r\n                <Text numberOfLines={1} style={styles.TitleWrapper}>\r\n                    Taskbox\r\n                </Text>\r\n            </View>\r\n            <TaskList />\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nPureInboxScreen.PropTypes = {\r\n    error: PropTypes.string,\r\n};\r\n\r\nPureInboxScreen.defaultProps = {\r\n    error: null,\r\n}\r\n\r\nexport default PureInboxScreen;","// /constants/globalStyles.js\r\nimport { StyleSheet } from 'react-native';\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    width: '100%',\r\n  },\r\n  TaskBox: {\r\n    flex: 1,\r\n    color: '#333',\r\n    fontSize: 16,\r\n    backgroundColor: '#26c6da',\r\n  },\r\n  CheckBox: {\r\n    borderColor: '#26c6da',\r\n    borderStyle: 'solid',\r\n    borderWidth: 2,\r\n    borderRadius: 1,\r\n    backgroundColor: 'transparent',\r\n    height: 18,\r\n    width: 18,\r\n  },\r\n  GlowCheckbox: {\r\n    borderColor: '#eee',\r\n    borderStyle: 'solid',\r\n    borderWidth: 2,\r\n    borderRadius: 1,\r\n    backgroundColor: '#eee',\r\n    color: 'transparent',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  GlowText: {\r\n    backgroundColor: '#eee',\r\n    color: 'transparent',\r\n  },\r\n  ListItem: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'nowrap',\r\n    height: 48,\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n  },\r\n  ListItemInputTask: {\r\n    backgroundColor: 'transparent',\r\n    width: '95%',\r\n    padding: 10,\r\n    fontFamily: 'NunitoSans',\r\n    fontSize: 14,\r\n    lineHeight: 20,\r\n    fontStyle: 'normal',\r\n  },\r\n  ListItemInputTaskArchived: {\r\n    color: '#aaa',\r\n    width: '95%',\r\n    padding: 10,\r\n    fontFamily: 'NunitoSans',\r\n    fontSize: 14,\r\n    lineHeight: 20,\r\n    fontStyle: 'normal',\r\n  },\r\n  LoadingItem: {\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n    flexWrap: 'nowrap',\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n    height: 48,\r\n    justifyContent: 'space-around',\r\n    paddingLeft: 16,\r\n    width: '100%',\r\n  },\r\n  ListItems: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    minHeight: 288,\r\n  },\r\n  WrapperMessage: {\r\n    position: 'absolute',\r\n    top: '40%',\r\n    right: 0,\r\n    bottom: 'auto',\r\n    left: 0,\r\n    width: 'auto',\r\n    height: 'auto',\r\n    textAlign: 'center',\r\n  },\r\n  PageListsShow: {\r\n    minHeight: '100vh',\r\n    backgroundColor: 'white',\r\n  },\r\n  PageListsShowhead: {\r\n    backgroundColor: '#d3edf4',\r\n    paddingTop: 24,\r\n    paddingBottom: 24,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    textAlign: 'center',\r\n  },\r\n  TitleMessage: {\r\n    fontSize: 16,\r\n    lineHeight: 24,\r\n    fontFamily: 'NunitoSans',\r\n    fontWeight: '800',\r\n    color: '#555',\r\n  },\r\n  SubtitleMessage: {\r\n    fontSize: 14,\r\n    lineHeight: 20,\r\n    color: '#666',\r\n    fontFamily: 'NunitoSans',\r\n  },\r\n  titlepage: {\r\n    fontSize: 20,\r\n    lineHeight: 24,\r\n  },\r\n  TitleWrapper: {\r\n    fontFamily: 'NunitoSans',\r\n    fontWeight: '800',\r\n    color: '#1c3f53',\r\n    maxWidth: '100%',\r\n  },\r\n});\r\n","// components/TaskList.stories.js\r\nimport * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport { styles } from '../constants/globalStyles';\r\nimport { storiesOf } from '@storybook/react-native';\r\nimport { task, actions } from './Task.stories';\r\nimport PureTaskList from './TaskList';\r\n\r\nexport const defaultTasks = [\r\n    {...task, id: '1', title: 'Task 1'},\r\n    {...task, id: '2', title: 'Task 2'},\r\n    {...task, id: '3', title: 'Task 3'},\r\n    {...task, id: '4', title: 'Task 4'},\r\n    {...task, id: '5', title: 'Task 5'},\r\n    {...task, id: '6', title: 'Task 6'},\r\n];\r\n\r\nexport const withPinnedTask = [\r\n    ...defaultTasks.slice(0, 5),\r\n    {id: '6', title: 'Task 6 (pinned)', state: 'TASK_PINNED'},\r\n];\r\n\r\nstoriesOf('PureTaskList', module)\r\n    .addDecorator(story => <View style={[styles.TaskBox, {padding: 42}]}>{story()}</View>)\r\n    .add('default', () => <PureTaskList task={defaultTasks} {...actions} />)\r\n    .add('withPinnedTask', () => <PureTaskList task={withPinnedTask} {...actions} />)\r\n    .add('loading', () => <PureTaskList loading task={[]} {...actions} />)\r\n    .add('empty', () => <PureTaskList task={[]} {...actions} />)\r\n","// if you use expo remove this line\nimport { AppRegistry } from 'react-native';\n\nimport { getStorybookUI, configure, addDecorator } from '@storybook/react-native';\nimport { withKnobs } from '@storybook/addon-knobs';\n\nimport './rn-addons';\n\n// enables knobs for all stories\naddDecorator(withKnobs);\n\n// import stories\nconfigure(() => {\n  // require('./stories');\n  require('../components/Task.stories.js');\n  require('../components/PureTaskList.stories.js');\n  require('../components/PureInboxScreen.stories.js');\n}, module);\n\n// Refer to https://github.com/storybookjs/storybook/tree/master/app/react-native#start-command-parameters\n// To find allowed options for getStorybookUI\nconst StorybookUIRoot = getStorybookUI({\n  asyncStorage: null\n});\n\n// If you are using React Native vanilla and after installation you don't see your app name here, write it manually.\n// If you use Expo you should remove this line.\nAppRegistry.registerComponent('%APP_NAME%', () => StorybookUIRoot);\n\nexport default StorybookUIRoot;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React from 'react'\r\n\r\nfunction TabBarIcon() {\r\n    return (\r\n        <>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TabBarIcon\r\n","// screens/InboxScreen.js\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PureInboxScreen from '../components/PureInboxScreen';\r\n\r\nconst InboxScreen = ({ error }) => {\r\n    return <PureInboxScreen error={error} />;\r\n}\r\n\r\nexport default connect(({ error }) => ({ error }))(InboxScreen);","import * as React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport store from '../lib/redux';\r\n\r\nimport InboxScreen from './InboxScreen';\r\n\r\nexport default function HomeScreen() {\r\n    return (\r\n        <Provider store={store}>\r\n            <InboxScreen />\r\n        </Provider>\r\n    );\r\n}\r\n","// screens/LinksScreen.js\r\nimport * as React from 'react';\r\nimport StorybookUIRoot from '../storybook';\r\n\r\nexport default function LinksScreen() {\r\n  return <StorybookUIRoot />;\r\n}","// /**\n//  * Learn more about createBottomTabNavigator:\n//  * https://reactnavigation.org/docs/bottom-tab-navigator\n//  */\n\n// import { Ionicons } from '@expo/vector-icons';\n// import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n// import { createStackNavigator } from '@react-navigation/stack';\n// import * as React from 'react';\n\n// import Colors from '../constants/Colors';\n// import useColorScheme from '../hooks/useColorScheme';\n// import TabOneScreen from '../screens/TabOneScreen';\n// import TabTwoScreen from '../screens/TabTwoScreen';\n// import { BottomTabParamList, TabOneParamList, TabTwoParamList } from '../types';\n\n// const BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\n// export default function BottomTabNavigator() {\n//   const colorScheme = useColorScheme();\n\n//   return (\n//     <BottomTab.Navigator\n//       initialRouteName=\"TabOne\"\n//       tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}>\n//       <BottomTab.Screen\n//         name=\"TabOne\"\n//         component={TabOneNavigator}\n//         options={{\n//           tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n//         }}\n//       />\n//       <BottomTab.Screen\n//         name=\"TabTwo\"\n//         component={TabTwoNavigator}\n//         options={{\n//           tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n//         }}\n//       />\n//     </BottomTab.Navigator>\n//   );\n// }\n\n// // You can explore the built-in icon families and icons on the web at:\n// // https://icons.expo.fyi/\n// function TabBarIcon(props: { name: React.ComponentProps<typeof Ionicons>['name']; color: string }) {\n//   return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\n// }\n\n// // Each tab has its own navigation stack, you can read more about this pattern here:\n// // https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\n// const TabOneStack = createStackNavigator<TabOneParamList>();\n\n// function TabOneNavigator() {\n//   return (\n//     <TabOneStack.Navigator>\n//       <TabOneStack.Screen\n//         name=\"TabOneScreen\"\n//         component={TabOneScreen}\n//         options={{ headerTitle: 'Tab One Title' }}\n//       />\n//     </TabOneStack.Navigator>\n//   );\n// }\n\n// const TabTwoStack = createStackNavigator<TabTwoParamList>();\n\n// function TabTwoNavigator() {\n//   return (\n//     <TabTwoStack.Navigator>\n//       <TabTwoStack.Screen\n//         name=\"TabTwoScreen\"\n//         component={TabTwoScreen}\n//         options={{ headerTitle: 'Tab Two Title' }}\n//       />\n//     </TabTwoStack.Navigator>\n//   );\n// }\n\n\n\n// navigation/BottomTabNavigator.js\nimport * as React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Taskbox\"\n        component={HomeScreen}\n        options={{\n          title: 'Taskbox',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-code-working\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Links\"\n        component={LinksScreen}\n        options={{\n          title: 'Storybook',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'How to get started';\n    case 'Links':\n      return 'Your Storybook';\n  }\n}\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          TabOne: {\n            screens: {\n              TabOneScreen: 'one',\n            },\n          },\n          TabTwo: {\n            screens: {\n              TabTwoScreen: 'two',\n            },\n          },\n        },\n      },\n      NotFound: '*',\n    },\n  },\n};\n","/**\n * If you are not familiar with React Navigation, check out the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { RootStackParamList } from '../types';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n          percolate: require('../assets/icon/percolate.ttf'),\n          'NunitoSans-Bold': require('../assets/fonts/NunitoSans-Bold.ttf'),\n          'NunitoSans-Italic': require('../assets/fonts/NunitoSans-Italic.ttf'),\n          NunitoSans: require('../assets/fonts/NunitoSans-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = \"data:font/ttf;base64,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\"","module.exports = __webpack_public_path__ + \"./fonts/NunitoSans-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/NunitoSans-Italic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/NunitoSans-Regular.ttf\";","// Components/Task.stories.js\r\n\r\nimport * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport { styles } from '../constants/globalStyles';\r\nimport { storiesOf } from '@storybook/react-native';\r\nimport { action } from '@storybook/addon-actions';\r\nimport Task from './Task';\r\n\r\nexport const task = {\r\n    id: 1,\r\n    title: 'Test task',\r\n    state: 'TASK_INBOX',\r\n    updatedAt: new Date(2021, 0, 1, 9, 0)\r\n};\r\n\r\nexport const actions = {\r\n    onPinTask: action('onPinTask'),\r\n    onArchiveTask: action('onArchiveTask')\r\n};\r\n\r\nstoriesOf('Task', module)\r\n    .addDecorator(story => <View style={styles.Task}>{story()}</View>)\r\n    .add('default', () => <Task task={task} {...actions} />)\r\n    .add('pinned', () => <Task task={{...task, state: 'TASK_PINNED'}} {...actions} />)\r\n    .add('archived', () => <Task task={{...task, state: 'TASK_ARCHIVED'}} {...actions} />);","// import '@storybook/addon-ondevice-actions/register';\n// import '@storybook/addon-ondevice-knobs/register';\n\n// storybook/rn-addons.js\nimport '@storybook/addon-ondevice-actions/register';","// components/PureInboxScreen.stories.js\r\nimport * as React from 'react';\r\nimport { storiesOf } from '@storybook/react-native';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { Provider } from 'react-redux';\r\nimport { defaultTasks } from './PureTaskList.stories';\r\nimport PureInboxScreen from './PureInboxScreen';\r\n\r\n// A super-simple mock of a redux store\r\nconst store = {\r\n    getState: () => {\r\n        return {\r\n            task: defaultTasks,\r\n        };\r\n    },\r\n    subscribe: () => 0,\r\n    dispatch: action('dispatch'),\r\n};\r\n\r\nstoriesOf('PureInboxScreen', module)\r\n    .addDecorator(story => <Provider store={store}>{story()}</Provider>)\r\n    .add('default', () => <PureInboxScreen />)\r\n    .add('error', () => <PureInboxScreen error=\"Something\" />);"],"sourceRoot":""}